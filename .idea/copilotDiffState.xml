<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="CopilotDiffPersistence">
    <option name="pendingDiffs">
      <map>
        <entry key="$PROJECT_DIR$/src/vista/TarjetaProyecto.java">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/src/vista/TarjetaProyecto.java" />
              <option name="originalContent" value="package vista;&#10;&#10;import modelo.Proyecto;&#10;import javax.swing.*;&#10;import javax.swing.border.TitledBorder;&#10;import java.awt.*;&#10;import java.awt.datatransfer.*;&#10;import java.awt.event.MouseAdapter;&#10;import java.awt.event.MouseEvent;&#10;import java.text.SimpleDateFormat;&#10;import java.util.function.Consumer;&#10;&#10;public class TarjetaProyecto extends JPanel {&#10;    private Proyecto proyecto;&#10;    private Consumer&lt;String&gt; onDropCallback;&#10;&#10;    public TarjetaProyecto(Proyecto proyecto, boolean esArrastrable, Consumer&lt;String&gt; onDropCallback) {&#10;        this.proyecto = proyecto;&#10;        this.onDropCallback = onDropCallback;&#10;        setLayout(new BorderLayout(5, 5));&#10;        setBorder(BorderFactory.createLineBorder(Color.GRAY, 1));&#10;        setBackground(Color.WHITE);&#10;&#10;        if (esArrastrable) {&#10;            setCursor(new Cursor(Cursor.MOVE_CURSOR));&#10;            setTransferHandler(new TransferHandler() {&#10;                @Override&#10;                protected Transferable createTransferable(JComponent c) {&#10;                    return new Transferable() {&#10;                        private final DataFlavor flavor = new DataFlavor(TarjetaProyecto.class, &quot;TarjetaProyecto&quot;);&#10;                        @Override&#10;                        public DataFlavor[] getTransferDataFlavors() {&#10;                            return new DataFlavor[] { flavor };&#10;                        }&#10;                        @Override&#10;                        public boolean isDataFlavorSupported(DataFlavor flavor) {&#10;                            return this.flavor.equals(flavor);&#10;                        }&#10;                        @Override&#10;                        public Object getTransferData(DataFlavor flavor) throws UnsupportedFlavorException {&#10;                            if (isDataFlavorSupported(flavor)) {&#10;                                return TarjetaProyecto.this;&#10;                            }&#10;                            throw new UnsupportedFlavorException(flavor);&#10;                        }&#10;                    };&#10;                }&#10;                @Override&#10;                public int getSourceActions(JComponent c) {&#10;                    return MOVE;&#10;                }&#10;            });&#10;            addMouseListener(new MouseAdapter() {&#10;                public void mousePressed(MouseEvent e) {&#10;                    JComponent comp = (JComponent) e.getSource();&#10;                    comp.getTransferHandler().exportAsDrag(comp, e, TransferHandler.MOVE);&#10;                }&#10;            });&#10;        } else {&#10;            setCursor(new Cursor(Cursor.HAND_CURSOR));&#10;        }&#10;&#10;        // --- UI de la tarjeta (sin cambios) ---&#10;        JPanel panelHeader = new JPanel(new BorderLayout());&#10;        panelHeader.setOpaque(false);&#10;        JLabel lblNombre = new JLabel(&quot;&lt;html&gt;&lt;b&gt;&quot; + proyecto.getNombreProyecto() + &quot;&lt;/b&gt;&lt;/html&gt;&quot;);&#10;        lblNombre.setFont(new Font(&quot;Segoe UI&quot;, Font.BOLD, 14));&#10;        lblNombre.setBorder(BorderFactory.createEmptyBorder(5, 5, 0, 5));&#10;        JButton botonDetalles = new JButton(&quot;...&quot;);&#10;        botonDetalles.setPreferredSize(new Dimension(30, 20));&#10;        botonDetalles.setMargin(new Insets(0,0,0,0));&#10;        panelHeader.add(lblNombre, BorderLayout.CENTER);&#10;        panelHeader.add(botonDetalles, BorderLayout.EAST);&#10;        add(panelHeader, BorderLayout.NORTH);&#10;&#10;        JPanel panelBody = new JPanel(new GridLayout(2, 1));&#10;        panelBody.setOpaque(false);&#10;        JLabel lblPrioridad = new JLabel(&quot;Prioridad: &quot; + proyecto.getNombrePrioridad());&#10;        lblPrioridad.setFont(new Font(&quot;Segoe UI&quot;, Font.PLAIN, 12));&#10;        lblPrioridad.setBorder(BorderFactory.createEmptyBorder(0, 5, 0, 5));&#10;        panelBody.add(lblPrioridad);&#10;        JLabel lblPorcentaje = new JLabel(&quot;Avance: &quot; + proyecto.getPorcentajeAvance() + &quot;%&quot;);&#10;        lblPorcentaje.setFont(new Font(&quot;Segoe UI&quot;, Font.PLAIN, 12));&#10;        lblPorcentaje.setBorder(BorderFactory.createEmptyBorder(0, 5, 5, 5));&#10;        panelBody.add(lblPorcentaje);&#10;        add(panelBody, BorderLayout.CENTER);&#10;&#10;        setPreferredSize(new Dimension(200, 100));&#10;        setMaximumSize(new Dimension(Integer.MAX_VALUE, 100));&#10;        setAlignmentX(Component.LEFT_ALIGNMENT);&#10;&#10;        botonDetalles.addActionListener(e -&gt; mostrarDetalles());&#10;    }&#10;&#10;    private void mostrarDetalles() {&#10;        SimpleDateFormat sdf = new SimpleDateFormat(&quot;dd/MM/yyyy&quot;);&#10;        String fechaInicio = (proyecto.getFechaInicio() != null) ? sdf.format(proyecto.getFechaInicio()) : &quot;N/A&quot;;&#10;        String fechaEstimada = (proyecto.getFechaFinalEstimada() != null) ? sdf.format(proyecto.getFechaFinalEstimada()) : &quot;N/A&quot;;&#10;        String mensaje = &quot;&lt;html&gt;&lt;b&gt;Nombre:&lt;/b&gt; &quot; + proyecto.getNombreProyecto() + &quot;&lt;br&gt;&quot; + &quot;&lt;b&gt;Estado:&lt;/b&gt; &quot; + proyecto.getNombreEstado() + &quot;&lt;br&gt;&quot; + &quot;&lt;b&gt;Prioridad:&lt;/b&gt; &quot; + proyecto.getNombrePrioridad() + &quot;&lt;br&gt;&quot; + &quot;&lt;b&gt;Avance:&lt;/b&gt; &quot; + proyecto.getPorcentajeAvance() + &quot;%&lt;br&gt;&quot; + &quot;&lt;b&gt;Fecha Inicio:&lt;/b&gt; &quot; + fechaInicio + &quot;&lt;br&gt;&quot; + &quot;&lt;b&gt;Fecha Fin Estimada:&lt;/b&gt; &quot; + fechaEstimada + &quot;&lt;br&gt;&quot; + &quot;&lt;b&gt;DescripciÃ³n:&lt;/b&gt; &quot; + proyecto.getDescripcionProyecto() + &quot;&lt;/html&gt;&quot;;&#10;        JOptionPane.showMessageDialog(this, mensaje, &quot;Detalles del Proyecto: &quot; + proyecto.getNombreProyecto(), JOptionPane.INFORMATION_MESSAGE);&#10;    }&#10;&#10;    public Proyecto getProyecto() { return proyecto; }&#10;}" />
              <option name="updatedContent" value="package vista;&#13;&#10;&#13;&#10;import modelo.Proyecto;&#13;&#10;import javax.swing.*;&#13;&#10;import javax.swing.border.TitledBorder;&#13;&#10;import java.awt.*;&#13;&#10;import java.awt.datatransfer.*;&#13;&#10;import java.awt.event.MouseAdapter;&#13;&#10;import java.awt.event.MouseEvent;&#13;&#10;import java.text.SimpleDateFormat;&#13;&#10;import java.util.function.Consumer;&#13;&#10;import java.util.logging.Logger;&#13;&#10;&#13;&#10;public class TarjetaProyecto extends JPanel {&#13;&#10;    private final Proyecto proyecto;&#13;&#10;&#13;&#10;    public TarjetaProyecto(Proyecto proyecto, boolean esArrastrable, Consumer&lt;String&gt; onDropCallback) {&#13;&#10;        this.proyecto = proyecto;&#13;&#10;        setLayout(new BorderLayout(5, 5));&#13;&#10;        setBorder(BorderFactory.createLineBorder(Color.GRAY, 1));&#13;&#10;        setBackground(Color.WHITE);&#13;&#10;&#13;&#10;        if (esArrastrable) {&#13;&#10;            setCursor(new Cursor(Cursor.MOVE_CURSOR));&#13;&#10;            setTransferHandler(new TransferHandler() {&#13;&#10;                @Override&#13;&#10;                protected Transferable createTransferable(JComponent c) {&#13;&#10;                    return new Transferable() {&#13;&#10;                        private final DataFlavor flavor = new DataFlavor(TarjetaProyecto.class, &quot;TarjetaProyecto&quot;);&#13;&#10;                        @Override&#13;&#10;                        public DataFlavor[] getTransferDataFlavors() {&#13;&#10;                            return new DataFlavor[] { flavor };&#13;&#10;                        }&#13;&#10;                        @Override&#13;&#10;                        public boolean isDataFlavorSupported(DataFlavor flavor) {&#13;&#10;                            return this.flavor.equals(flavor);&#13;&#10;                        }&#13;&#10;                        @Override&#13;&#10;                        public Object getTransferData(DataFlavor flavor) throws UnsupportedFlavorException {&#13;&#10;                            if (isDataFlavorSupported(flavor)) {&#13;&#10;                                return TarjetaProyecto.this;&#13;&#10;                            }&#13;&#10;                            throw new UnsupportedFlavorException(flavor);&#13;&#10;                        }&#13;&#10;                    };&#13;&#10;                }&#13;&#10;                @Override&#13;&#10;                public int getSourceActions(JComponent c) {&#13;&#10;                    return MOVE;&#13;&#10;                }&#13;&#10;            });&#13;&#10;            addMouseListener(new MouseAdapter() {&#13;&#10;                public void mousePressed(MouseEvent e) {&#13;&#10;                    JComponent comp = (JComponent) e.getSource();&#13;&#10;                    comp.getTransferHandler().exportAsDrag(comp, e, TransferHandler.MOVE);&#13;&#10;                }&#13;&#10;            });&#13;&#10;        } else {&#13;&#10;            setCursor(new Cursor(Cursor.HAND_CURSOR));&#13;&#10;        }&#13;&#10;&#13;&#10;        // --- UI de la tarjeta (sin cambios) ---&#13;&#10;        JPanel panelHeader = new JPanel(new BorderLayout());&#13;&#10;        panelHeader.setOpaque(false);&#13;&#10;        JLabel lblNombre = new JLabel(&quot;&lt;html&gt;&lt;b&gt;&quot; + proyecto.getNombreProyecto() + &quot;&lt;/b&gt;&lt;/html&gt;&quot;);&#13;&#10;        lblNombre.setFont(new Font(&quot;Segoe UI&quot;, Font.BOLD, 14));&#13;&#10;        lblNombre.setBorder(BorderFactory.createEmptyBorder(5, 5, 0, 5));&#13;&#10;        JButton botonDetalles = new JButton(&quot;...&quot;);&#13;&#10;        botonDetalles.setPreferredSize(new Dimension(30, 20));&#13;&#10;        botonDetalles.setMargin(new Insets(0,0,0,0));&#13;&#10;        panelHeader.add(lblNombre, BorderLayout.CENTER);&#13;&#10;        panelHeader.add(botonDetalles, BorderLayout.EAST);&#13;&#10;        add(panelHeader, BorderLayout.NORTH);&#13;&#10;&#13;&#10;        JPanel panelBody = new JPanel(new GridLayout(2, 1));&#13;&#10;        panelBody.setOpaque(false);&#13;&#10;        JLabel lblPrioridad = new JLabel(&quot;Prioridad: &quot; + proyecto.getNombrePrioridad());&#13;&#10;        lblPrioridad.setFont(new Font(&quot;Segoe UI&quot;, Font.PLAIN, 12));&#13;&#10;        lblPrioridad.setBorder(BorderFactory.createEmptyBorder(0, 5, 0, 5));&#13;&#10;        panelBody.add(lblPrioridad);&#13;&#10;        JLabel lblPorcentaje = new JLabel(&quot;Avance: &quot; + proyecto.getPorcentajeAvance() + &quot;%&quot;);&#13;&#10;        lblPorcentaje.setFont(new Font(&quot;Segoe UI&quot;, Font.PLAIN, 12));&#13;&#10;        lblPorcentaje.setBorder(BorderFactory.createEmptyBorder(0, 5, 5, 5));&#13;&#10;        panelBody.add(lblPorcentaje);&#13;&#10;        add(panelBody, BorderLayout.CENTER);&#13;&#10;&#13;&#10;        setPreferredSize(new Dimension(200, 100));&#13;&#10;        setMaximumSize(new Dimension(Integer.MAX_VALUE, 100));&#13;&#10;        setAlignmentX(Component.LEFT_ALIGNMENT);&#13;&#10;&#13;&#10;        botonDetalles.addActionListener(e -&gt; mostrarDetalles());&#13;&#10;    }&#13;&#10;&#13;&#10;    private void mostrarDetalles() {&#13;&#10;        SimpleDateFormat sdf = new SimpleDateFormat(&quot;dd/MM/yyyy&quot;);&#13;&#10;        String fechaInicio = (proyecto.getFechaInicio() != null) ? sdf.format(proyecto.getFechaInicio()) : &quot;N/A&quot;;&#13;&#10;        String fechaEstimada = (proyecto.getFechaFinalEstimada() != null) ? sdf.format(proyecto.getFechaFinalEstimada()) : &quot;N/A&quot;;&#13;&#10;        String mensaje = &quot;&lt;html&gt;&lt;b&gt;Nombre:&lt;/b&gt; &quot; + proyecto.getNombreProyecto() + &quot;&lt;br&gt;&quot; + &quot;&lt;b&gt;Estado:&lt;/b&gt; &quot; + proyecto.getNombreEstado() + &quot;&lt;br&gt;&quot; + &quot;&lt;b&gt;Prioridad:&lt;/b&gt; &quot; + proyecto.getNombrePrioridad() + &quot;&lt;br&gt;&quot; + &quot;&lt;b&gt;Avance:&lt;/b&gt; &quot; + proyecto.getPorcentajeAvance() + &quot;%&lt;br&gt;&quot; + &quot;&lt;b&gt;Fecha Inicio:&lt;/b&gt; &quot; + fechaInicio + &quot;&lt;br&gt;&quot; + &quot;&lt;b&gt;Fecha Fin Estimada:&lt;/b&gt; &quot; + fechaEstimada + &quot;&lt;br&gt;&quot; + &quot;&lt;b&gt;DescripciÃ³n:&lt;/b&gt; &quot; + proyecto.getDescripcionProyecto() + &quot;&lt;/html&gt;&quot;;&#13;&#10;        JOptionPane.showMessageDialog(this, mensaje, &quot;Detalles del Proyecto: &quot; + proyecto.getNombreProyecto(), JOptionPane.INFORMATION_MESSAGE);&#13;&#10;    }&#13;&#10;&#13;&#10;    public Proyecto getProyecto() { return proyecto; }&#13;&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/vista/TarjetaTarea.java">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/src/vista/TarjetaTarea.java" />
              <option name="originalContent" value="package vista;&#10;&#10;import modelo.Tarea;&#10;import javax.swing.*;&#10;import javax.swing.border.TitledBorder;&#10;import java.awt.*;&#10;import java.awt.event.MouseAdapter;&#10;import java.awt.event.MouseEvent;&#10;import java.awt.datatransfer.*;&#10;import java.text.SimpleDateFormat;&#10;import java.util.function.Consumer;&#10;&#10;public class TarjetaTarea extends JPanel {&#10;    private Tarea tarea;&#10;    private Consumer&lt;String&gt; onDropCallback;&#10;&#10;    public TarjetaTarea(Tarea tarea, boolean esArrastrable, Consumer&lt;String&gt; onDropCallback) {&#10;        this.tarea = tarea;&#10;        this.onDropCallback = onDropCallback;&#10;        setLayout(new BorderLayout(5, 5));&#10;        setBorder(BorderFactory.createLineBorder(Color.DARK_GRAY, 1));&#10;        setBackground(new Color(230, 245, 255));&#10;&#10;        if (esArrastrable) {&#10;            setCursor(new Cursor(Cursor.MOVE_CURSOR));&#10;            setTransferHandler(new TransferHandler() {&#10;                @Override&#10;                protected Transferable createTransferable(JComponent c) {&#10;                    return new Transferable() {&#10;                        private final DataFlavor flavor = new DataFlavor(TarjetaTarea.class, &quot;TarjetaTarea&quot;);&#10;                        @Override&#10;                        public DataFlavor[] getTransferDataFlavors() {&#10;                            return new DataFlavor[] { flavor };&#10;                        }&#10;                        @Override&#10;                        public boolean isDataFlavorSupported(DataFlavor flavor) {&#10;                            return this.flavor.equals(flavor);&#10;                        }&#10;                        @Override&#10;                        public Object getTransferData(DataFlavor flavor) throws UnsupportedFlavorException {&#10;                            if (isDataFlavorSupported(flavor)) {&#10;                                return TarjetaTarea.this;&#10;                            }&#10;                            throw new UnsupportedFlavorException(flavor);&#10;                        }&#10;                    };&#10;                }&#10;                @Override&#10;                public int getSourceActions(JComponent c) {&#10;                    return MOVE;&#10;                }&#10;            });&#10;            addMouseListener(new MouseAdapter() {&#10;                public void mousePressed(MouseEvent e) {&#10;                    JComponent comp = (JComponent) e.getSource();&#10;                    comp.getTransferHandler().exportAsDrag(comp, e, TransferHandler.MOVE);&#10;                }&#10;            });&#10;        } else {&#10;            setCursor(new Cursor(Cursor.HAND_CURSOR));&#10;        }&#10;&#10;        JPanel panelHeader = new JPanel(new BorderLayout());&#10;        panelHeader.setOpaque(false);&#10;&#10;        JLabel lblNombre = new JLabel(&quot;&lt;html&gt;&lt;b&gt;&quot; + tarea.getNombreTarea() + &quot;&lt;/b&gt;&lt;/html&gt;&quot;);&#10;        lblNombre.setFont(new Font(&quot;Segoe UI&quot;, Font.BOLD, 12));&#10;        lblNombre.setBorder(BorderFactory.createEmptyBorder(5, 5, 0, 5));&#10;&#10;        JButton botonDetalles = new JButton(&quot;...&quot;);&#10;        botonDetalles.setPreferredSize(new Dimension(30, 20));&#10;        botonDetalles.setMargin(new Insets(0,0,0,0));&#10;&#10;        panelHeader.add(lblNombre, BorderLayout.CENTER);&#10;        panelHeader.add(botonDetalles, BorderLayout.EAST);&#10;        add(panelHeader, BorderLayout.NORTH);&#10;&#10;        JPanel panelBody = new JPanel(new GridLayout(2, 1));&#10;        panelBody.setOpaque(false);&#10;&#10;        JLabel lblPrioridad = new JLabel(&quot;Prioridad: &quot; + tarea.getNombrePrioridad());&#10;        lblPrioridad.setFont(new Font(&quot;Segoe UI&quot;, Font.PLAIN, 10));&#10;        lblPrioridad.setBorder(BorderFactory.createEmptyBorder(0, 5, 0, 5));&#10;        panelBody.add(lblPrioridad);&#10;&#10;        JLabel lblPorcentaje = new JLabel(&quot;Avance: &quot; + tarea.getPorcentajeAvance() + &quot;%&quot;);&#10;        lblPorcentaje.setFont(new Font(&quot;Segoe UI&quot;, Font.PLAIN, 10));&#10;        lblPorcentaje.setBorder(BorderFactory.createEmptyBorder(0, 5, 5, 5));&#10;        panelBody.add(lblPorcentaje);&#10;&#10;        add(panelBody, BorderLayout.CENTER);&#10;&#10;        setPreferredSize(new Dimension(180, 90));&#10;        setMaximumSize(new Dimension(Integer.MAX_VALUE, 90));&#10;        setAlignmentX(Component.LEFT_ALIGNMENT);&#10;&#10;        botonDetalles.addActionListener(e -&gt; mostrarDetalles());&#10;    }&#10;&#10;    private void mostrarDetalles() {&#10;        SimpleDateFormat sdf = new SimpleDateFormat(&quot;dd/MM/yyyy&quot;);&#10;        String fechaInicio = (tarea.getFechaInicio() != null) ? sdf.format(tarea.getFechaInicio()) : &quot;N/A&quot;;&#10;        String fechaEstimada = (tarea.getFechaFinalEstimada() != null) ? sdf.format(tarea.getFechaFinalEstimada()) : &quot;N/A&quot;;&#10;        String mensaje = &quot;&lt;html&gt;&lt;b&gt;Nombre:&lt;/b&gt; &quot; + tarea.getNombreTarea() + &quot;&lt;br&gt;&quot; + &quot;&lt;b&gt;Estado:&lt;/b&gt; &quot; + tarea.getNombreEstado() + &quot;&lt;br&gt;&quot; + &quot;&lt;b&gt;Prioridad:&lt;/b&gt; &quot; + tarea.getNombrePrioridad() + &quot;&lt;br&gt;&quot; + &quot;&lt;b&gt;Avance:&lt;/b&gt; &quot; + tarea.getPorcentajeAvance() + &quot;%&lt;br&gt;&quot; + &quot;&lt;b&gt;Fecha Inicio:&lt;/b&gt; &quot; + fechaInicio + &quot;&lt;br&gt;&quot; + &quot;&lt;b&gt;Fecha Fin Estimada:&lt;/b&gt; &quot; + fechaEstimada + &quot;&lt;/html&gt;&quot;;&#10;        JOptionPane.showMessageDialog(this, &quot;Detalles de la Tarea: &quot; + tarea.getNombreTarea(), &quot;Detalles de la Tarea&quot;, JOptionPane.INFORMATION_MESSAGE);&#10;    }&#10;&#10;    public Tarea getTarea() { return tarea; }&#10;}" />
              <option name="updatedContent" value="package vista;&#13;&#10;&#13;&#10;import modelo.Tarea;&#13;&#10;import javax.swing.*;&#13;&#10;import javax.swing.border.TitledBorder;&#13;&#10;import java.awt.*;&#13;&#10;import java.awt.event.MouseAdapter;&#13;&#10;import java.awt.event.MouseEvent;&#13;&#10;import java.awt.datatransfer.*;&#13;&#10;import java.text.SimpleDateFormat;&#13;&#10;import java.util.function.Consumer;&#13;&#10;&#13;&#10;public class TarjetaTarea extends JPanel {&#13;&#10;    private final Tarea tarea;&#13;&#10;&#13;&#10;    public TarjetaTarea(Tarea tarea, boolean esArrastrable, Consumer&lt;String&gt; onDropCallback) {&#13;&#10;        this.tarea = tarea;&#13;&#10;        setLayout(new BorderLayout(5, 5));&#13;&#10;        setBorder(BorderFactory.createLineBorder(Color.DARK_GRAY, 1));&#13;&#10;        setBackground(new Color(230, 245, 255));&#13;&#10;&#13;&#10;        if (esArrastrable) {&#13;&#10;            setCursor(new Cursor(Cursor.MOVE_CURSOR));&#13;&#10;            setTransferHandler(new TransferHandler() {&#13;&#10;                @Override&#13;&#10;                protected Transferable createTransferable(JComponent c) {&#13;&#10;                    return new Transferable() {&#13;&#10;                        private final DataFlavor flavor = new DataFlavor(TarjetaTarea.class, &quot;TarjetaTarea&quot;);&#13;&#10;                        @Override&#13;&#10;                        public DataFlavor[] getTransferDataFlavors() {&#13;&#10;                            return new DataFlavor[] { flavor };&#13;&#10;                        }&#13;&#10;                        @Override&#13;&#10;                        public boolean isDataFlavorSupported(DataFlavor flavor) {&#13;&#10;                            return this.flavor.equals(flavor);&#13;&#10;                        }&#13;&#10;                        @Override&#13;&#10;                        public Object getTransferData(DataFlavor flavor) throws UnsupportedFlavorException {&#13;&#10;                            if (isDataFlavorSupported(flavor)) {&#13;&#10;                                return TarjetaTarea.this;&#13;&#10;                            }&#13;&#10;                            throw new UnsupportedFlavorException(flavor);&#13;&#10;                        }&#13;&#10;                    };&#13;&#10;                }&#13;&#10;                @Override&#13;&#10;                public int getSourceActions(JComponent c) {&#13;&#10;                    return MOVE;&#13;&#10;                }&#13;&#10;            });&#13;&#10;            addMouseListener(new MouseAdapter() {&#13;&#10;                public void mousePressed(MouseEvent e) {&#13;&#10;                    JComponent comp = (JComponent) e.getSource();&#13;&#10;                    comp.getTransferHandler().exportAsDrag(comp, e, TransferHandler.MOVE);&#13;&#10;                }&#13;&#10;            });&#13;&#10;        } else {&#13;&#10;            setCursor(new Cursor(Cursor.HAND_CURSOR));&#13;&#10;        }&#13;&#10;&#13;&#10;        JPanel panelHeader = new JPanel(new BorderLayout());&#13;&#10;        panelHeader.setOpaque(false);&#13;&#10;&#13;&#10;        JLabel lblNombre = new JLabel(&quot;&lt;html&gt;&lt;b&gt;&quot; + tarea.getNombreTarea() + &quot;&lt;/b&gt;&lt;/html&gt;&quot;);&#13;&#10;        lblNombre.setFont(new Font(&quot;Segoe UI&quot;, Font.BOLD, 12));&#13;&#10;        lblNombre.setBorder(BorderFactory.createEmptyBorder(5, 5, 0, 5));&#13;&#10;&#13;&#10;        JButton botonDetalles = new JButton(&quot;...&quot;);&#13;&#10;        botonDetalles.setPreferredSize(new Dimension(30, 20));&#13;&#10;        botonDetalles.setMargin(new Insets(0,0,0,0));&#13;&#10;&#13;&#10;        panelHeader.add(lblNombre, BorderLayout.CENTER);&#13;&#10;        panelHeader.add(botonDetalles, BorderLayout.EAST);&#13;&#10;        add(panelHeader, BorderLayout.NORTH);&#13;&#10;&#13;&#10;        JPanel panelBody = new JPanel(new GridLayout(2, 1));&#13;&#10;        panelBody.setOpaque(false);&#13;&#10;&#13;&#10;        JLabel lblPrioridad = new JLabel(&quot;Prioridad: &quot; + tarea.getNombrePrioridad());&#13;&#10;        lblPrioridad.setFont(new Font(&quot;Segoe UI&quot;, Font.PLAIN, 10));&#13;&#10;        lblPrioridad.setBorder(BorderFactory.createEmptyBorder(0, 5, 0, 5));&#13;&#10;        panelBody.add(lblPrioridad);&#13;&#10;&#13;&#10;        JLabel lblPorcentaje = new JLabel(&quot;Avance: &quot; + tarea.getPorcentajeAvance() + &quot;%&quot;);&#13;&#10;        lblPorcentaje.setFont(new Font(&quot;Segoe UI&quot;, Font.PLAIN, 10));&#13;&#10;        lblPorcentaje.setBorder(BorderFactory.createEmptyBorder(0, 5, 5, 5));&#13;&#10;        panelBody.add(lblPorcentaje);&#13;&#10;&#13;&#10;        add(panelBody, BorderLayout.CENTER);&#13;&#10;&#13;&#10;        setPreferredSize(new Dimension(180, 90));&#13;&#10;        setMaximumSize(new Dimension(Integer.MAX_VALUE, 90));&#13;&#10;        setAlignmentX(Component.LEFT_ALIGNMENT);&#13;&#10;&#13;&#10;        botonDetalles.addActionListener(e -&gt; mostrarDetalles());&#13;&#10;    }&#13;&#10;&#13;&#10;    private void mostrarDetalles() {&#13;&#10;        SimpleDateFormat sdf = new SimpleDateFormat(&quot;dd/MM/yyyy&quot;);&#13;&#10;        String fechaInicio = (tarea.getFechaInicio() != null) ? sdf.format(tarea.getFechaInicio()) : &quot;N/A&quot;;&#13;&#10;        String fechaEstimada = (tarea.getFechaFinalEstimada() != null) ? sdf.format(tarea.getFechaFinalEstimada()) : &quot;N/A&quot;;&#13;&#10;        String mensaje = &quot;&lt;html&gt;&lt;b&gt;Nombre:&lt;/b&gt; &quot; + tarea.getNombreTarea() + &quot;&lt;br&gt;&quot; + &quot;&lt;b&gt;Estado:&lt;/b&gt; &quot; + tarea.getNombreEstado() + &quot;&lt;br&gt;&quot; + &quot;&lt;b&gt;Prioridad:&lt;/b&gt; &quot; + tarea.getNombrePrioridad() + &quot;&lt;br&gt;&quot; + &quot;&lt;b&gt;Avance:&lt;/b&gt; &quot; + tarea.getPorcentajeAvance() + &quot;%&lt;br&gt;&quot; + &quot;&lt;b&gt;Fecha Inicio:&lt;/b&gt; &quot; + fechaInicio + &quot;&lt;br&gt;&quot; + &quot;&lt;b&gt;Fecha Fin Estimada:&lt;/b&gt; &quot; + fechaEstimada + &quot;&lt;/html&gt;&quot;;&#13;&#10;        JOptionPane.showMessageDialog(this, &quot;Detalles de la Tarea: &quot; + tarea.getNombreTarea(), &quot;Detalles de la Tarea&quot;, JOptionPane.INFORMATION_MESSAGE);&#13;&#10;    }&#13;&#10;&#13;&#10;    public Tarea getTarea() { return tarea; }&#13;&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
      </map>
    </option>
  </component>
</project>